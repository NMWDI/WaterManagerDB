# Runs all components except backups for local dev, no ssl traffic

version: "3.9"
services:

  db:
    env_file:
      - ./api/.env
    image: postgis/postgis
    volumes:
      - postgis-data:/var/lib/postgresql
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      - TZ=America/Denver
      - PGTZ=America/Denver
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"

  api:
    build:
      context: ./api/
      dockerfile: ./Dockerfile
    command: bash -c "
      while !</dev/tcp/db/5432; do sleep 1; done; 
      python -m api.dbsetup;
      uvicorn api.main:app 
      --host 0.0.0.0 
      --root-path /api/v1
      --reload
      "
    ports:
      - "8000:8000"
    volumes:
      - ./api:/api
    depends_on:
      - db
      - traefik
    env_file:
      - ./api/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/api/v1`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.middlewares=api-sp"
      - "traefik.http.middlewares.api-sp.stripprefix.prefixes=/api/v1"
      - "traefik.http.middlewares.api-sp.stripprefix.forceSlash=false"
    restart: on-failure
  
  frontend:
    build:
        context: ./frontend
        dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - db
      - api
      - traefik
    command: npm start
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"

  traefik:
    image: "traefik:v2.9"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  postgis-data:
