version: "3.9"
services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - api
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`pvacd.newmexicowaterdata.org`)"
      - "traefik.http.routers.frontend.entrypoints=websecure,web"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    command: bash -c "
        while !</dev/tcp/db/5432; do sleep 1; done; 
      uvicorn api.main:app 
      --host 0.0.0.0 
      --proxy-headers --root-path /api/v1
      "
    ports:
      - "8000:8000"
    volumes:
      - ./api:/api
    depends_on:
      - db
      - traefik
    env_file:
      - ./api/.env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`pvacd.newmexicowaterdata.org`) && PathPrefix(`/api/v1`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.routers.api.middlewares=api-sp"
      - "traefik.http.middlewares.api-sp.stripprefix.prefixes=/api/v1"
      - "traefik.http.middlewares.api-sp.stripprefix.forceSlash=false"
      - "traefik.http.routers.api-insecure.rule=Host(`pvacd.newmexicowaterdata.org`) && PathPrefix(`/api/v1`)"
      - "traefik.http.routers.api-insecure.entrypoints=web"
      - "traefik.http.routers.api-insecure.middlewares=force-secure"

  db:
    image: postgis/postgis
    volumes:
      - postgis-data:/var/lib/postgresql
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      - TZ=America/Denver
      - PGTZ=America/Denver
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"

  traefik:
    image: "traefik:v2.9"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=foobar@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--traefik.http.middlewares.force-secure.redirectscheme.scheme=https"
      - "--traefik.http.middlewares.force-secure.redirectscheme.permanent=true"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      -
  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    user: postgres:postgres # Optional: see below
    volumes:
      - /var/opt/pgbackups:/backups
    links:
      - postgres
    depends_on:
      - postgres
    env_file:
      - ./api/.env
    environment:
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080
#  pgadmin:
#    container_name: pgadmin4_container
#    image: dpage/pgadmin4
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: root
#    ports:
#      - "5050:80"

volumes:
  postgis-data:
