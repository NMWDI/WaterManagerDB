version: "3.9"
services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      - REACT_APP_API_URL=
#    labels:
#      - traefik.http.routers.my-container.rule=Host(`pvacd.newmexicowaterdata.org`)
  api:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn api.main:app --host 0.0.0.0 --proxy-headers'
    ports:
      - "8000:8000"
    volumes:
      - ./api:/api
    depends_on:
      - db
    env_file:
      - ./api/.env
    labels:
        - traefik.http.routers.reverse-proxy.rule=Host(`pvacd.newmexicowaterdata.org`)

  db:
    image: postgis/postgis
    volumes:
      - postgis-data:/var/lib/postgresql
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      - TZ=America/Denver
      - PGTZ=America/Denver
#    expose:
#      - 5432
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
#  pgadmin:
#    container_name: pgadmin4_container
#    image: dpage/pgadmin4
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: root
#    ports:
#      - "5050:80"

volumes:
  postgis-data:
